// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSiteFuncionarios.Data.Context;

namespace WebSiteFuncionarios.Data.Migrations
{
    [DbContext(typeof(FuncionarioContext))]
    [Migration("20220927160656_Initial-Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29");

            modelBuilder.Entity("WebSiteFuncionarios.Data.Entities.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("DepartamentoId");

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            DepartamentoId = 1,
                            Descricao = "Infraestrutura"
                        },
                        new
                        {
                            DepartamentoId = 2,
                            Descricao = "Desenvolvimento"
                        },
                        new
                        {
                            DepartamentoId = 3,
                            Descricao = "Segurança"
                        });
                });

            modelBuilder.Entity("WebSiteFuncionarios.Data.Entities.Funcao", b =>
                {
                    b.Property<int>("FuncaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("FuncaoId");

                    b.ToTable("Funcoes");

                    b.HasData(
                        new
                        {
                            FuncaoId = 1,
                            Descricao = "Técnico de TI"
                        },
                        new
                        {
                            FuncaoId = 2,
                            Descricao = "Técnico de Segurança"
                        },
                        new
                        {
                            FuncaoId = 3,
                            Descricao = "Desenvolvedor"
                        },
                        new
                        {
                            FuncaoId = 4,
                            Descricao = "Analista de Dados"
                        },
                        new
                        {
                            FuncaoId = 5,
                            Descricao = "QA Tester"
                        });
                });

            modelBuilder.Entity("WebSiteFuncionarios.Data.Entities.Funcionario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuncaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Cpf");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("WebSiteFuncionarios.Data.Entities.Funcionario", b =>
                {
                    b.HasOne("WebSiteFuncionarios.Data.Entities.Departamento", "Departamento")
                        .WithMany("Funcionarios")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSiteFuncionarios.Data.Entities.Funcao", "Funcao")
                        .WithMany("Funcionarios")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
